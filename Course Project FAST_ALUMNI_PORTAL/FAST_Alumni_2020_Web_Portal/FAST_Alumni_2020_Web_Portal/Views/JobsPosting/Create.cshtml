@using FAST_Alumni_2020_Web_Portal.Models
@model FAST_Alumni_2020_Web_Portal.Models.JobPosting

@*@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>*@

@using (Html.BeginForm())
{
    @*@Html.AntiForgeryToken()
    *@

@*<div class="form-horizontal">*@
    @*<h4>JobPosting</h4>
    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.title, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.title, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.description, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.skils, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.skils, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.skils, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.experience, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.experience, new { htmlAttributes = new { @class = "form-control" } })           @Html.ValidationMessageFor(model => model.experience, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.DropDownListFor(model => model.organizationId, (SelectList)ViewBag.Data)
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.alumniId, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.alumniId, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.alumniId, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Create" class="btn btn-default" />
        </div>
    </div>*@
    <link href="~/Content/MyStyleSheet.css" rel="stylesheet" />
    <div class="login-box">
        <h2>Create </h2>
        <form>
            <div class="user-box">
                @Html.EditorFor(model => model.title, new { htmlAttributes = new { @class = "form-control" } })
                <label>Title</label>
            </div>
            <div class="user-box">
                @Html.EditorFor(model => model.description, new { htmlAttributes = new { @class = "form-control" } })
                <label>Description</label>
            </div>
            <div class="user-box">
                @Html.EditorFor(model => model.skils, new { htmlAttributes = new { @class = "form-control" } })
                <label>Skills</label>
            </div>
            <div class="user-box">
                @Html.EditorFor(model => model.experience, new { htmlAttributes = new { @class = "form-control" } })
                <label>Experince</label>
            </div>
            <div class="user-box">
                @Html.DropDownListFor(model => model.organizationId, (SelectList)ViewBag.Data)
            </div>
            <br/>
            <a>
                <input type="submit" value="Post Job" class="user-box" />
            </a>
        </form>
    </div>
@*</div>*@
}

@*
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
*@

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
